---
dependency:
  name: shell
  command: ansible-playbook -v ${MOLECULE_PLAYBOOK:-deploy.yml}
driver:
  name: docker
lint:
  name: yamllint
platforms:
{% if auto-molecule_centos7 == true %}
  - name: centos7
    image: "cleveritcz/${MOLECULE_DISTRO:-centos7}:testing"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
{% endif %}
{% if auto-molecule_debian8 == true %}
  - name: debian8
    image: "cleveritcz/debian8:testing"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
{% endif %}
{% if auto-molecule_debian9 == true %}
  - name: debian9
    image: "cleveritcz/debian9:testing"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
{% endif %}
provisioner:
  name: ansible
  options:
    vv: true
  playbooks:
    converge: ../../install.yml
    prepare: prepare.yml
    cleanup: cleanup.yml
  env:
    ANSIBLE_CONFIG: ../../ansible.cfg
  lint:
    name: ansible-lint
    options:
      x: ANSIBLE0013
verifier:
  name: testinfra
  directory: ../../tests
  options:
    verbose: true
    sudo: false
  lint:
    name: flake8
    enabled: false
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-install.yml}
scenario:
  name: default
  test_sequence:
    - syntax
    - prepare
    - lint
    - verify
